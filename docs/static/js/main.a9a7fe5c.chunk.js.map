{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAsB5C,OACI,sBAAMC,SAdW,SAACC,GAClBA,EAAEC,iBAICJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAMlB,SACI,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAtBgB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCVlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE5B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXrB,kBAgBZM,GAhBY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAX,SAAEA,GAAc,IAAD,EAEfd,mBAAS,CAChCqB,KAAM,GACNa,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE3BC,EAF2B,KAsBxC,OAdAC,qBAAW,WAEVxB,EAAQC,GACPwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAId,CAACpB,IAIEqB,EDpBsBK,CAAa1B,GAAhCa,EAF0B,EAE/BN,KAAaa,EAFkB,EAElBA,QAEjB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAEnDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEdtBgB,EAAe,WAAO,IAAD,EAEEzC,mBAAS,CAAC,cAFZ,mBAE3B0C,EAF2B,KAEf3C,EAFe,KAQlC,OACQ,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAGA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OAClB,cAAC,EAAD,CAEAA,SAAUA,GADHA,Y,MClBjC6B,IAASC,OACJ,cAAE,EAAF,IACFC,SAASC,eAAe,W","file":"static/js/main.a9a7fe5c.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        ///console.log(\"NICE\")\r\n\r\n        if(inputValue.trim().length > 2){\r\n\r\n            setCategories( cats => [inputValue, ...cats] )\r\n            setInputValue('');\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              value={inputValue}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n        </form>\r\n    \r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n   \r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Tw4pZO2jfSbnxkzzIsbdm0wqRJST4sdz`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n      \r\n      return{\r\n          id: img.id,\r\n          title: img.title,\r\n          url: img.images?.downsized_medium.url\r\n      }\r\n\r\n    })\r\n\r\n    return gifs;\r\n\r\n }\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\" >{category}</h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__flash\" >Loading</p>}\r\n\r\n        <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                        key = {img.id}\r\n                        {...img} />\r\n                    ))\r\n                }\r\n\r\n         </div> \r\n         </>\r\n    )\r\n}\r\n","\r\nimport {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n   \r\n   const [state,setState] = useState({\r\n     data: [],\r\n     loading: true\r\n\r\n   });\r\n\r\n   useEffect( () => {\r\n    \r\n    getGifs(category)\r\n    .then( imgs =>{\r\n        setState({\r\n            data: imgs,\r\n            loading: false       \r\n        });\r\n    })\r\n\r\n    }, [category])\r\n\r\n   \r\n \r\n   return state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\nconst [categories, setCategories] = useState(['One Punch']);\r\n// const handleAdd = () => {\r\n//     setCategories(cats => [...cats,'HunterXHunter']);\r\n//     }\r\n\r\n\r\nreturn (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            \r\n            <AddCategory setCategories={setCategories}/>\r\n            \r\n            <hr/>\r\n\r\n       \r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                          <GifGrid \r\n                          key = {category}\r\n                          category={category}/>\r\n                    )\r\n}\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\nimport { AddCategory } from './components/AddCategory';\nimport './index.css';\n\nReactDOM.render(\n     < GifExpertApp />,\n   document.getElementById('root')\n);\n"],"sourceRoot":""}